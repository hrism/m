---
import Layout from '../layouts/Layout.astro';
import GlitchImage from '../components/GlitchImage.jsx';
import GlitchText from '../components/GlitchText.astro';
import GlitchIcon from '../components/GlitchIcon.astro';
import FadeInSection from '../components/FadeInSection.jsx';
import CardCarousel from '../components/CardCarousel.jsx';
import ResponsiveVideo from '../components/ResponsiveVideo.jsx';
import { FaFacebook, FaRss, FaLinkedin, FaGithub } from 'react-icons/fa';
import { FaXTwitter } from 'react-icons/fa6';
import { PiThreadsLogo } from 'react-icons/pi';
import { SiQiita } from 'react-icons/si';
import { GiAbstract024, GiAbstract076, GiAbstract065 } from 'react-icons/gi';

const icons = [
    { href: 'https://github.com/hrism', icon: FaGithub },
    { href: 'https://qiita.com/hrism', icon: SiQiita },
    { href: 'https://hrism.hatenablog.com/', icon: FaRss },
    { href: 'https://x.com/hrism2', icon: FaXTwitter },
    { href: 'https://facebook.com/haruki.ishimaru', icon: FaFacebook },
    { href: 'https://jp.linkedin.com/in/haruki-ishimaru-178687193', icon: FaLinkedin },
];
const assetBase = import.meta.env.ASSET_BASE_URL;
const birthYear = 1989;
const birthMonth = 6;
const today = new Date();
const currentYear = today.getFullYear();
const currentMonth = today.getMonth() + 1; // JSのgetMonth()は0始まりなので+1

let age = currentYear - birthYear;
if (currentMonth < birthMonth) {
    age -= 1; // 誕生月前ならまだ加算しない
}

const birthInfo = `${age}歳, ${birthYear}年6月生まれ`;
---

<Layout>
    <section class="relative snap-start">
        <span class="absolute top-1/2 left-0 w-full bg-cyan-700 z-10 py-16 mix-blend-exclusion backdrop-blur-sm drop-shadow"></span>
        <div class="absolute top-1/2 left-0 w-full text-amber-600 text-center z-20 py-6 tracking-widest mix-blend-plus-lighter font-syncopate translate-y-1">
            <GlitchText text="HARUKI ISHIMARU" className="text-2xl md:text-5xl font-bold mb-2" mainTextClassName="text-black" centered="true" />
            <GlitchText text="A DESIGNER, WEB ENGINEER" className="text-sm" mainTextClassName="text-black" centered="true" />
        </div>
        <GlitchImage pcSrc="/img/hero3.jpg" mobileSrc="/img/hero_mobile.jpg" alt="" client:load />
    </section>
    {/* Works */}
    <section class="snap-start py-8 bg-black flex flex-col gap-8 h-screen items-center overflow-y-scroll w-full overflow-x-hidden relative">
        {/* 背景動画 */}
        <div class="absolute inset-0 z-0">
            <ResponsiveVideo src="/mov/AdobeStock_294764508.mp4" client:visible />
        </div>
        
        {/* 暗いオーバーレイ */}
        <div class="absolute inset-0 bg-black bg-opacity-60 z-1"></div>
        
        {/* Works タイトル */}
        <div class="absolute top-4 left-1/2 transform -translate-x-1/2 bg-black pt-2 px-6 z-20 mix-blend-exclusion">
            <GlitchText text="Works" className="text-5xl md:text-6xl lg:text-7xl" centered="true" />
        </div>
        
        {/* カードカルーセル */}
        <div class="w-full z-10 h-full pt-32 relative">
            <CardCarousel client:load />
        </div>
    </section>
    <FadeInSection client:load className="snap-start bg-gradient-to-t from-gray-700 to-gray-950 min-h-screen pb-16 md:pb-0">
        <div class="fade-item flex flex-col gap-8 p-8 items-center justify-center overflow-x-hidden">
            <GlitchText text="About me" className="text-5xl md:text-6xl lg:text-7xl" centered="true" />
            <div class="scale-x-[1000.0] scale-y-75">
                <GlitchText text="-" className="text-xs" centered="true" />
            </div>
            <GlitchText text="イシマル ハルキ" className="text-2xl" centered="true" />
            <GlitchText text={birthInfo} className="text-base" centered="true" />
            <ul class="flex w-full gap-4 justify-center hide-when-param">
                {
                    icons.map(({ href, icon: Icon }) => (
                        <li>
                            <a href={href} target="_blank" rel="noopener noreferrer" class="text-white text-2xl">
                                <GlitchIcon Icon={Icon} />
                            </a>
                        </li>
                    ))
                }
            </ul>
            <div class="scale-x-[1000.0] scale-y-75">
                <GlitchText text="-" className="text-xs" centered="true" />
            </div>
            <div class="flex items-center gap-2">
                <div class="text-white text-xl">
                    <GlitchIcon Icon={GiAbstract024} />
                </div>
                <GlitchText text="経歴" className="text-2xl" centered="true" />
                <div class="text-white text-xl">
                    <GlitchIcon Icon={GiAbstract024} />
                </div>
            </div>
            <GlitchText text="同志社大学を卒業後, 動画制作会社, 紙媒体デザイン会社, SIer, フリーランスを経た後、株式会社ストックラボのCOOとして、WEB全般および買取・販売事業を統括" className="text-lg" centered="true" />
            <div class="scale-x-[1000.0] scale-y-75">
                <GlitchText text="-" className="text-xs" centered="true" />
            </div>
            <div class="flex items-center gap-2">
                <div class="text-white text-xl">
                    <GlitchIcon Icon={GiAbstract076} />
                </div>
                <GlitchText text="専門" className="text-2xl" centered="true" />
                <div class="text-white text-xl">
                    <GlitchIcon Icon={GiAbstract076} />
                </div>
            </div>
            <GlitchText text="フルスタック開発, UX/UIデザイン・改善, ユーザビリティ調査, サーバーレスWebサービス構築, 静的サイト構築, 動画制作, 組織開発, Pythonによる業務自動化, 情報設計, SEO最適化, 技術系記事の翻訳・紹介" className="text-lg" centered="true" />
        </div>
        <div class="fade-item p-4 md:p-8 hide-when-param">
            <div class="scale-x-[1000.0] scale-y-75">
                <GlitchText text="-" className="text-xs" centered="true" />
            </div>
            <GlitchText text="Contact" className="text-5xl md:text-6xl lg:text-7xl py-6" centered="true" />
            <form action="https://formspree.io/f/mdkelonr" method="POST" class="max-w-xl mx-auto p-6 bg-gray-900 text-white rounded-2xl shadow-lg space-y-6">
                <input type="hidden" name="_next" value="/thanks" />

                <div>
                    <label class="block mb-2 text-sm font-semibold">お名前</label>
                    <input type="text" name="name" required class="w-full px-4 py-2 rounded-md bg-gray-800 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
                </div>

                <div>
                    <label class="block mb-2 text-sm font-semibold">メールアドレス</label>
                    <input type="email" name="email" required class="w-full px-4 py-2 rounded-md bg-gray-800 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
                </div>

                <div>
                    <label class="block mb-2 text-sm font-semibold">メッセージ</label>
                    <textarea name="message" required rows="5" class="w-full px-4 py-2 rounded-md bg-gray-800 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500"></textarea>
                </div>

                <button type="submit" class="w-full py-3 rounded-md bg-indigo-600 hover:bg-indigo-700 transition-colors font-semibold">送信</button>
            </form>
        </div>
    </FadeInSection>
    <script type="module" client:load>
        const urlParams = new URLSearchParams(window.location.search);
        // ここで「特定のパラメータ名」を指定する（例: hideContent）
        if (urlParams.has('hideContent')) {
            document.querySelectorAll('.hide-when-param').forEach((el) => {
                el.classList.add('hidden');
            });
        }
    </script>
</Layout>
